(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{208:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"electronic-rights-transfer-protocol-ertp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#electronic-rights-transfer-protocol-ertp","aria-hidden":"true"}},[e._v("#")]),e._v(" Electronic Rights Transfer Protocol - ERTP")]),e._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Bitcoin has unspent transactions. Ethereum has account balances. Agoric has ERTP.")]),e._v(" "),a("p",[e._v("ERTP is a uniform way of transferring tokens and other digital assets in JavaScript. All kinds of digital assets can be easily created, but importantly, they can be transferred in exactly the same ways, with exactly the same security properties.")]),e._v(" "),a("h2",{attrs:{id:"how-it-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[e._v("#")]),e._v(" How It Works")]),e._v(" "),a("p",[e._v("ERTP, or the Electronic Rights Transfer Protocol, is a smart contract framework. Throw away all you know about public key hashes mapped to account balances, because ERTP doesn't use 'em.")]),e._v(" "),a("p",[e._v("ERTP itself doesn't have any concept of cryptography. Instead, it uses object capabilities to enforce access control. Instead of having to prove ownership of a corresponding private key, in the world of object capabilities, if your program has a reference to an object, it can call methods on that object. If it doesn't have a reference, it can't. For more on object capabilities, see "),a("a",{attrs:{href:"http://habitatchronicles.com/2017/05/what-are-capabilities/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chip Morningstar's post"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"a-quick-tutorial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-quick-tutorial","aria-hidden":"true"}},[e._v("#")]),e._v(" A quick tutorial")]),e._v(" "),a("p",[e._v("Let's look at an example. In ERTP, all digital assets, including fungible and\nnon-fungible tokens, are created by a "),a("code",[e._v("mint")]),e._v(". Having access to the mint\ngives you the power to create more digital assets of the same type at\nwill. For instance, let's say we want to create a new community\ncurrency called 'BaytownBucks':")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" baytownBucksMint "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("makeMint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'BaytownBucks'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("Great! Now let's use our mint to create 1000 new BaytownBucks.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" purse "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" baytownBucksMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'community treasury'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("The act of minting created 1000 BaytownBucks and stored them together in a\n"),a("code",[e._v("purse")]),e._v(". Purses in ERTP only hold one type of digital asset, so this\npurse can only ever hold BaytownBucks.")]),e._v(" "),a("p",[e._v("Let's distribute the BaytownBucks to members of the community. To send\nmoney in ERTP, we withdraw "),a("code",[e._v("payments")]),e._v(" from purses.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" paymentForAlice "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" purse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("withdraw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("alice's community money")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("Like our purse, this payment contains BaytownBucks, but unlike purses,\npayments are used to represent tokens in transit. A payment can be\nsent to someone else, a purse never should be.")]),e._v(" "),a("p",[e._v("Now let's send the payment to Alice as message:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("alice.receivePayment(paymentForAlice);\n")])])]),a("p",[e._v("This may seem strange, but ERTP is built on top of "),a("a",{attrs:{href:"https://github.com/Agoric/SwingSet",target:"_blank",rel:"noopener noreferrer"}},[e._v("an\ninfrastructure"),a("OutboundLink")],1),e._v(" in which\neverything is an object. In this example, we have a reference to the\nobject "),a("code",[e._v("alice")]),e._v(", and can call her "),a("code",[e._v("receivePayment")]),e._v(" to ask her to\nreceive this payment. Alice's methods are entirely up to her, and are\nnot part of ERTP.")]),e._v(" "),a("h2",{attrs:{id:"security-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Security Properties")]),e._v(" "),a("p",[e._v("How does Alice know that she got paid real money? She could have been\nsent fake money, or she could have been sent money that was\n"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Double-spending",target:"_blank",rel:"noopener noreferrer"}},[e._v("double-spent"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("When alice receives an alleged payment, she can call a method to know\nthat the alleged payment was valid, and get a new payment that is\nexclusively hers:")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" myExclusivePayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" BaytownBucksIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("claimAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("allegedPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("The BaytownBucksIssuer is associated with the BaytownBucksMint, but\nthe issuer is the public-facing version that is accessible to anyone.\nBy holding the reference to a mint, you can mint more tokens. By\nholding a reference to the issuer for a mint, you can check that a\npayment is valid and exclusively claim it in a new payment to yourself.")]),e._v(" "),a("p",[e._v("That's the basic use case for a fungible token. "),a("code",[e._v("makeMint")]),e._v(" in\n"),a("a",{attrs:{href:"core/issuers.js"}},[e._v("issuers.js")]),e._v(" takes\nin an optional configuration that allows for many more possibilities.")]),e._v(" "),a("h2",{attrs:{id:"pixel-demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pixel-demo","aria-hidden":"true"}},[e._v("#")]),e._v(" Pixel Demo")]),e._v(" "),a("p",[e._v("For a demo on how ERTP can be used, check out our "),a("a",{attrs:{href:"https://github.com/Agoric/ERTP/blob/master/GALLERY-README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pixel Demo"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"a-preemption-hierarchy-of-rights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-preemption-hierarchy-of-rights","aria-hidden":"true"}},[e._v("#")]),e._v(" A preemption hierarchy of rights")]),e._v(" "),a("p",[e._v("All of the pixels (individual squares) on the demo webpage are owned by the gallery, the code that administrates the pixels. The gallery has the power to revoke the pixels from any user at any time. When a user calls "),a("code",[e._v("gallery!tapFaucet()")]),e._v(", the gallery takes the least recently colored pixel from its current holder (if anyone holds it) and gives it to the user in the form of an ERTP payment. The gallery is able to revoke the pixels held by users because the pixel demo creates a customized version of ERTP in which rights are hierarchical. Hierarchical rights are familiar in property. For instance, a property owner might lease an apartment to a tenant, who might in turn, lease it to a subtenant. Anyone higher in the hierarchy can take away access from anyone lower in the hierarchy, and give it to someone else.")]),e._v(" "),a("h2",{attrs:{id:"gotchas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gotchas","aria-hidden":"true"}},[e._v("#")]),e._v(" Gotchas")]),e._v(" "),a("p",[e._v("When looking at the code in our "),a("a",{attrs:{href:"https://github.com/Agoric/ERTP/tree/master/test",target:"_blank",rel:"noopener noreferrer"}},[e._v("tests"),a("OutboundLink")],1),e._v(", you might see some new\nconcepts:")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("Vats")]),e._v(": All user code runs in what we call a "),a("code",[e._v("vat")]),e._v(". Within a vat,\ncode is run synchronously. Communication with another vat happens\nasynchronously. The "),a("a",{attrs:{href:"https://github.com/Agoric/SwingSet",target:"_blank",rel:"noopener noreferrer"}},[e._v("SwingSet\ninfrastructure"),a("OutboundLink")],1),e._v(" creates the vats\nand makes communication between vats possible.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("E() and infix bang (!)")]),e._v(": Instead of "),a("code",[e._v("obj.foo()")]),e._v(", we can write\n"),a("code",[e._v("E(obj).foo()")]),e._v(" or the syntactic sugar, "),a("code",[e._v("obj!foo()")]),e._v(' and get a promise\nfor the result. The syntax means "deliver the message foo() to the\nactual object asynchronously, in its own turn, wherever and whenever\nit is, even if it is local." Using E or !, you can talk\nasynchronously to local and remote objects in exactly the same way,\nwhich is really cool!')])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Presences")]),e._v(": Presences are our name for the local object that\nstands in for the remote object. If "),a("code",[e._v("obj")]),e._v(' is a presence of a remote\nobject, we can send messages to the remote object by using\n"!" on '),a("code",[e._v("obj")]),e._v(", as in the above example.")])])]),e._v(" "),a("h2",{attrs:{id:"more-ertp-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-ertp-resources","aria-hidden":"true"}},[e._v("#")]),e._v(" More ERTP resources")]),e._v(" "),a("p",[e._v("Mark Miller explained ERTP on Oct 10, 2018 in his "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=YXUqfgdDbr8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Programming Secure Smart Contracts"),a("OutboundLink")],1),e._v(" presentation\nduring San Francisco Blockchain Week at a\n"),a("a",{attrs:{href:"https://www.meetup.com/SF-Cryptocurrency-Devs/events/253457222/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SF Cryptocurrency Devs meetup"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=YXUqfgdDbr8",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://user-images.githubusercontent.com/150986/59150095-b8a65200-89e3-11e9-9b5d-43a9be8a3c90.png",alt:"miller-sfbw-erights"}}),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"higher-order-smart-contracts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-smart-contracts","aria-hidden":"true"}},[e._v("#")]),e._v(" Higher Order Smart Contracts")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("contractHost")]),e._v(" tests detail the composition of a covered call option\nwith an escrow exchange contract.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npx tape -r esm test/swingsetTests/contractHost/test-contractHost.js\n")])])]),a("p",[e._v("For more examples, please see the code for Alice and Bob in "),a("code",[e._v("test/swingsetTests/contractHost/")]),e._v(".")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/150986/59150181-f3f55080-89e4-11e9-8046-fcb9c10831b1.png",alt:"higher-order-smart-contract-covered-call-escrow"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);